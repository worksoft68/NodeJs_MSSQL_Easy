<%- include ('./../helpers/pagination') %>
	<% const collection="sys_Role_Permission" ; const linkPrefix=systemConfig.prefixAdmin + `/${collection}/`; %>
		<%- include ('./../elements/notify') %>
			<div class="container-fluid">
				<input name="linkPrefix" id="linkPrefix" type="hidden" value="<%= linkPrefix %>">
				<input name="params" id="params" type="hidden" value="<%= params %>">
				<div class="card card-info card-outline">
					<div class="card-header">
						<h6 class="card-title">Form</h6>
						<div class="card-tools">
							<button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip"
								title="Collapse">
								<i class="fas fa-minus"></i>
							</button>
						</div>
					</div>
					<div class="card-body" style="display: block;">
						<form action=" <%= linkPrefix %>searchGet" method="GET" autocomplete="off">
							<div class="form-group row">
								<label id="labRolePermissionId"
									class="col-sm-2 col-form-label text-sm-right ">RolePermissionId</label>
								<div class="col-xs-2 col-sm-2">
									<input type="number" readonly name="RolePermissionId" id="RolePermissionId"
										value="<%= item.RolePermissionId %>" class="form-control form-control-sm">
								</div>
								<label id="labRoleId"
									class="col-sm-2 col-form-label text-sm-right required">RoleId</label>
								<div class="col-xs-2 col-sm-2">
									<input type="number" name="RoleId" id="RoleId" value="<%= item.RoleId %>"
										class="form-control form-control-sm">
								</div>
								<label id="labFunctions"
									class="col-sm-2 col-form-label text-sm-right required">Functions</label>
								<div class="col-xs-2 col-sm-2">
									<div class="dropdown">
										<div id="divDropdown" class="dropdown-content">
											<input type="text" id="" name="" onkeyup="filterSelectBox('')"
												onfocus="focusDropdown('')" onblur="blurDropdown('')"
												class="form-control form-control-sm">
											<input id="Functions" name="Functions" type="hidden">
											<div id="DivConten" class="Divdropdown-content">
											</div>
										</div>
									</div>
								</div>
								<label id="labFullAuthority"
									class="col-sm-2 col-form-label text-sm-right ">FullAuthority</label>
								<div class="col-xs-2 col-sm-2">
									<input type="checkbox" name="FullAuthority" id="FullAuthority"
										class="form-control form-control-sm">
								</div>
								<label id="labAddnew" class="col-sm-2 col-form-label text-sm-right ">Addnew</label>
								<div class="col-xs-2 col-sm-2">
									<input type="checkbox" name="Addnew" id="Addnew"
										class="form-control form-control-sm">
								</div>
								<label id="labUpdates" class="col-sm-2 col-form-label text-sm-right ">Updates</label>
								<div class="col-xs-2 col-sm-2">
									<input type="checkbox" name="Updates" id="Updates"
										class="form-control form-control-sm">
								</div>
								<label id="labReadOnly" class="col-sm-2 col-form-label text-sm-right ">ReadOnly</label>
								<div class="col-xs-2 col-sm-2">
									<input type="checkbox" name="ReadOnly" id="ReadOnly"
										class="form-control form-control-sm">
								</div>
								<label id="labFullOfYourself"
									class="col-sm-2 col-form-label text-sm-right ">FullOfYourself</label>
								<div class="col-xs-2 col-sm-2">
									<input type="checkbox" name="FullOfYourself" id="FullOfYourself"
										class="form-control form-control-sm">
								</div>
							</div>
							<div class="form-group row">
								<div class="col-xs-2 col-sm-2"></div>
								<div class="col-xs-10 col-sm-10">

									<button type="button" id="btnSave" class="btn btn-sm btn-success" title="Save">
										<i class="fa fa-save"></i> Save
									</button>

									<button type="button" id="btnSaveAs" class="btn-sm btn-danger" title="Save as">
										<i class="far fa-clone"></i> Save as
									</button>

									&nbsp; <button type="button" id="btnUpdate" class="btn-sm btn-primary"
										title="Update">
										<i class="fa fa-save"></i> Update
									</button>

									&nbsp; <button type="button" id="btnDelete" class="btn btn-sm btn-danger"
										title="Delete">
										<i class="fas fa-trash-alt"></i> Delete
									</button>

									&nbsp; <button type="button" id="btnSearchPost" class="btn btn-sm btn-primary"
										title="Search">
										<i class="fa fa-search"></i> Search
									</button>

									&nbsp; <button type="button" id="btnSearchGet" class="btn-sm btn-warning"
										title="Search Get">
										<i class="fa fa-search"></i> Search Get
									</button>
									&nbsp; <button type="button" id="btnExport" class="btn btn-sm btn-success"
										title="Export">
										<i class="fa fa-download"></i> Export
									</button>

									<!-- <input type="button" id="btnSave" class="btn-sm btn-success" value="Save">
									&nbsp; <input type="button" id="btnSaveAs" class="btn-sm btn-danger"
										value="Save as">
									&nbsp; <input type="button" id="btnUpdate" class="btn-sm btn-primary"
										value="Update">
									&nbsp; <input type="button" id="btnDelete" class="btn-sm btn-danger" value="Delete">
									&nbsp; <input type="button" id="btnSearchPost" class="btn-sm btn-info"
										value="Search">
									&nbsp; <input type="submit" id="btnSearchGet" class="btn-sm btn-warning"
										value="Search Get">
									&nbsp; <input type="button" id="btnExport" class="btn-sm btn-success"
										value="Export"> -->
								</div>
							</div>
							<div class="form-group row">
								<div class="text-success" id="divMessage"></div>
							</div>
						</form>
						<input name="RolePermissionIdHidden" id="RolePermissionIdHidden" type="hidden">
						<input name="listData" id="listData" type="hidden" value="<%= itemString %>">
						<input name="sysLanguage" id="sysLanguage" type="hidden" value="<%= language %>">
						<input name="listDataCatalogue" id="listDataCatalogue" type="hidden" value="<%= catalogue %>">
					</div>
				</div>
				<div class="card card-info card-outline">
					<div class="card-header">
						<h4 class="card-title">List data</h4>
						<div class="card-tools">
							<button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip"
								title="Collapse"><i class="fas fa-minus"></i></button>
						</div>
					</div>
					<div class="card-body">
						<table id="tableSys_Role_Permission" class="table table-bordered table-hover btn-table mb-0">
							<thead>
								<tr>
									<th class="text-center">
										<div class="custom-control custom-checkbox">
											<input class="custom-control-input cbAll" type="checkbox" id="check-all">
											<label for="check-all" class="custom-control-label"></label>
										</div>
									</th>
									<th class="text-center"><label
											id="labRolePermissionId_tb">RolePermissionId</label></a></th>
									<th class="text-center"><label id="labRoleId_tb">RoleId</label></a></th>
									<th class="text-center"><label id="labFunctions_tb">Functions</label></a></th>
									<th class="text-center"><label id="labFullAuthority_tb">FullAuthority</label></a>
									</th>
									<th class="text-center"><label id="labAddnew_tb">Addnew</label></a></th>
									<th class="text-center"><label id="labUpdates_tb">Updates</label></a></th>
									<th class="text-center"><label id="labReadOnly_tb">ReadOnly</label></a></th>
									<th class="text-center"><label id="labFullOfYourself_tb">FullOfYourself</label></a>
									</th>
									<th class="text-center">Action</a></th>
								</tr>
							</thead>
							<tbody>
								<tr>
									<th class="text-center"></a></th>
									<th class="text-center"></a></th>
									<th class="text-center"></a></th>
									<th class="text-center"></a></th>
									<th class="text-center"></a></th>
									<th class="text-center"></a></th>
									<th class="text-center"></a></th>
									<th class="text-center"></a></th>
									<th class="text-center"></a></th>
								</tr>
							</tbody>
						</table>
					</div>
				</div>
				<div class="card-footer clearfix" id="paginationSys_Role_Permission">
				</div>
			</div>
			<script type="application/javascript">
				var language = {};

				onLoadData();
				function onLoadData() {
					getLanguage();
					setUpdateButtonStatus(false)
					setInterfaceText();
					var strData = $('#listData').val();
					const arrData = JSON.parse(strData);
					if (arrData.length > 0) {
						displayDataToTable(arrData);
						var paramsString = $('#params').val();
						const params = JSON.parse(paramsString);
						var linkPrefix = $('#linkPrefix').val();
						paginationHelper(params.pagination, "Sys_Role_Permission", params.currentStatus, params.keyword, linkPrefix, "paginationSys_Role_Permission");
					}
				}

				function displayDataToTable(datas) {
					var table = document.getElementById("tableSys_Role_Permission");
					var lengthtable = table.rows.length - 1;
					for (var n = lengthtable; n > 0; n--) {
						table.deleteRow(n);
					}
					var length = datas.length;
					if (length < 1) {
						showNoticeDanger(language.Message_NotFoundData);
						return false;
					}
					datas.forEach(function (data) {
						var row = table.insertRow(1);
						var cell0 = row.insertCell(0);
						var cell1 = row.insertCell(1);
						var cell2 = row.insertCell(2);
						var cell3 = row.insertCell(3);
						var cell4 = row.insertCell(4);
						var cell5 = row.insertCell(5);
						var cell6 = row.insertCell(6);
						var cell7 = row.insertCell(7);
						var cell8 = row.insertCell(8);
						var cell9 = row.insertCell(9);
						let check = `<div class="custom-control custom-checkbox"> 
				<input class="custom-control-input" type="checkbox" name="chkListData" id="${data.RolePermissionId}" value="${data.RolePermissionId}">
				<label for="${data.RolePermissionId}" class="custom-control-label"></label>
			</div>`;
						cell0.innerHTML = check;
						cell1.innerHTML = data.RolePermissionId;
						cell2.innerHTML = data.RoleId;
						cell3.innerHTML = data.Functions;
						cell4.innerHTML = data.FullAuthority;
						cell5.innerHTML = data.Addnew;
						cell6.innerHTML = data.Updates;
						cell7.innerHTML = data.ReadOnly;
						cell8.innerHTML = data.FullOfYourself;
						let strbutton = " <a  onclick=\"getById('" + data.RolePermissionId + "')\" type=\"button\" class=\"rounded-circle btn btn-sm btn-info\" title=\"Edit\">" +
							"<i class=\"fas fa-pencil-alt\"></i>" +
							"</a> " +
							" <button type=\"button\" class=\"rounded-circle btn btn-sm btn-danger\" data-id=\"" + data.RolePermissionId + "\" title=\"Delete\"  onclick=\"deleteById(this," + data.RolePermissionId + ")\">";
						strbutton += " <i class=\"fas fa-trash-alt\"></i> ";
						strbutton += " </ button > ";
						cell9.innerHTML = strbutton;
					});
				}
				function setUpdateButtonStatus(statusUpdate) {
					$('#btnSave').prop('hidden', statusUpdate);
					$('#btnUpdate').prop('hidden', !statusUpdate);
				}

				function getLanguage() {
					var languageString = $('#sysLanguage').val();
					language = JSON.parse(languageString);
				}

				function setInterfaceText() {
					$("#pageTitle").html(language.TitlePage);
					$("#labRolePermissionId").text(language.RolePermissionId);
					$("#labRoleId").text(language.RoleId);
					$("#labFunctions").text(language.Functions);
					$("#labFullAuthority").text(language.FullAuthority);
					$("#labAddnew").text(language.Addnew);
					$("#labUpdates").text(language.Updates);
					$("#labReadOnly").text(language.ReadOnly);
					$("#labFullOfYourself").text(language.FullOfYourself);
					$("#labRolePermissionId_tb").text(language.RolePermissionId);
					$("#labRoleId_tb").text(language.RoleId);
					$("#labFunctions_tb").text(language.Functions);
					$("#labFullAuthority_tb").text(language.FullAuthority);
					$("#labAddnew_tb").text(language.Addnew);
					$("#labUpdates_tb").text(language.Updates);
					$("#labReadOnly_tb").text(language.ReadOnly);
					$("#labFullOfYourself_tb").text(language.FullOfYourself);
				}

				createDataForDropdownLists();
				function createDataForDropdownLists() {
					var strCatalogue = $('#listDataCatalogue').val();
					arrCatalogue = JSON.parse(strCatalogue);
					createDataForDropdown(arrCatalogue[0], 'Functions', '', '', '', '-- Chose --');
				}

				closeAllDropdown();
				function closeAllDropdown() {
					var DivConten = document.getElementById('DivConten');
					DivConten.hidden = true;

				}

				function getById(Id) {
					var link = $('#linkPrefix').val() + 'getById/' + Id;
					$.ajax({
						type: 'GET',
						url: link,
						dataType: "json",
						success: function (resultdata) {
							var success = resultdata.success;
							if (success == true) {
								showDataToForm(resultdata.data);
							}
						},
						failure: function (response) {
							alert(language.Message_GetItemByIdError);
						},
						error: function (response) {
							alert(language.Message_GetItemByIdError);
						},
					});
				}

				function showDataToForm(data) {
					try {
						setUpdateButtonStatus(true);
						$('#RolePermissionIdHidden').val(data.RolePermissionId);
						$('#RolePermissionId').val(data.RolePermissionId);
						$('#RoleId').val(data.RoleId);
						$('#Functions').val(data.Functions);
						if ((data.FullAuthority == "true") || (data.FullAuthority == true) || (data.FullAuthority == "active") || (data.FullAuthority == "yes") || (data.FullAuthority == "1"))
							$("#FullAuthority").prop("checked", true);
						else $("#FullAuthority").prop("checked", false);
						if ((data.Addnew == "true") || (data.Addnew == true) || (data.Addnew == "active") || (data.Addnew == "yes") || (data.Addnew == "1"))
							$("#Addnew").prop("checked", true);
						else $("#Addnew").prop("checked", false);
						if ((data.Updates == "true") || (data.Updates == true) || (data.Updates == "active") || (data.Updates == "yes") || (data.Updates == "1"))
							$("#Updates").prop("checked", true);
						else $("#Updates").prop("checked", false);
						if ((data.ReadOnly == "true") || (data.ReadOnly == true) || (data.ReadOnly == "active") || (data.ReadOnly == "yes") || (data.ReadOnly == "1"))
							$("#ReadOnly").prop("checked", true);
						else $("#ReadOnly").prop("checked", false);
						if ((data.FullOfYourself == "true") || (data.FullOfYourself == true) || (data.FullOfYourself == "active") || (data.FullOfYourself == "yes") || (data.FullOfYourself == "1"))
							$("#FullOfYourself").prop("checked", true);
						else $("#FullOfYourself").prop("checked", false);
					}
					catch (error) { }
				}

				function clearForm() {
					try {
						$('#RolePermissionIdHidden').val('');
						setUpdateButtonStatus(false)
						$('#RolePermissionId').val('');
						$('#RoleId').val('');
						$('#Functions').val('');
						$("#FullAuthority").prop("checked", false);
						$("#Addnew").prop("checked", false);
						$("#Updates").prop("checked", false);
						$("#ReadOnly").prop("checked", false);
						$("#FullOfYourself").prop("checked", false);
					}
					catch (error) { }
				}

				$('#btnSearchPost').click(function () {
					$(this).prop('disabled', true);
					getContentPages(1);
				});

				function getContentPages(page) {
					let data = {
						'Page': page,
						'Functions': $('#Functions').val(),
					}
					var link = $('#linkPrefix').val() + 'search';
					$.ajax({
						type: 'POST',
						url: link,
						data: data,
						dataType: "json",
						success: function (resultdata) {
							$('#btnSearchPost').prop('disabled', false);
							let result = resultdata.result;
							displayDataToTable(result);
							var linkPrefix = $('#linkPrefix').val();
							let params = resultdata.params;
							paginationHelper(params.pagination, "Sys_Role_Permission", "", "", linkPrefix, "paginationSys_Role_Permission");

							if (params.pagination.totalItems > 0) {
								var message = language.Message_Find + params.pagination.totalItems + language.Message_Words_records;
								showNoticeSuccess(message);
							}
						},
						failure: function (response) {
							$('#btnSearchPost').prop('disabled', false);
							showNoticeDanger('Search Error');
						},
						error: function (response) {
							$('#btnSearchPost').prop('disabled', false);
							showNoticeDanger('Search Error');
						}
					});
					$('#btnSearchPost').prop('disabled', false);
				}

				$('#btnSave').click(function () {
					$(this).prop('disabled', true);
					saveInsert();
				});

				$('#btnSaveAs').click(function () {
					$(this).prop('disabled', true);
					$('#RolePermissionIdHidden').val('');
					$('#RolePermissionId').val('');
					saveInsert();
				});

				function getDataForm() {
					if (($('#RoleId').val() < 0) || ($('#RoleId').val() > 2147483647)) {
						var message = formatMessage(language.RoleId + ": " + language.Message_Invalid_RoleId, '0', '2147483647');
						alert(message);
						return false;
					}
					if (($('#Functions').val().length < 1) || ($('#Functions').val().length > 50)) {
						var message = formatMessage(language.Functions + ": " + language.Message_Invalid_Functions, '1', '50');
						alert(message);
						return false;
					}
					return {
						'RolePermissionIdHidden': $('#RolePermissionIdHidden').val(),
						'RolePermissionId': $('#RolePermissionId').val(),
						'RoleId': $('#RoleId').val(),
						'Functions': $('#Functions').val(),
						'FullAuthority': $('#FullAuthority').is(":checked"),
						'Addnew': $('#Addnew').is(":checked"),
						'Updates': $('#Updates').is(":checked"),
						'ReadOnly': $('#ReadOnly').is(":checked"),
						'FullOfYourself': $('#FullOfYourself').is(":checked"),
					}
				}

				function saveInsert() {
					let data = getDataForm();
					if (data == false) {
						$('#btnSave').prop('disabled', false);
						return false;
					}
					var link = $('#linkPrefix').val() + 'save';
					$.ajax({
						type: 'post',
						url: link,
						data: data,
						dataType: "json",
						success: function (response) {
							var success = response.success;
							var result = response.data;
							if ((success == 'false') || (success == false))
								showNoticeDanger(language.Message_AddNewError);
							else if ((success != true) && (success != 'true'))
								showNoticeDanger(result.message);
							else {
								insertRow(result.data);
								clearForm();
							}
						},
						failure: function (response) {
							showErrorMessageSave(response, language.Message_AddNewError);
						},
						error: function (response) {
							showErrorMessageSave(response, language.Message_AddNewError);
						},
					});
					$('#btnSave').prop('disabled', false);
				}

				function insertRow(data) {
					showNoticeSuccess(language.Message_AddNewSuccess);
					var table = document.getElementById("tableSys_Role_Permission");
					var row = table.insertRow(1);
					var cell0 = row.insertCell(0);
					var cell1 = row.insertCell(1);
					var cell2 = row.insertCell(2);
					var cell3 = row.insertCell(3);
					var cell4 = row.insertCell(4);
					var cell5 = row.insertCell(5);
					var cell6 = row.insertCell(6);
					var cell7 = row.insertCell(7);
					var cell8 = row.insertCell(8);
					var cell9 = row.insertCell(9);
					let check = `<div class="custom-control custom-checkbox"> 
					<input class="custom-control-input" type="checkbox" name="chkListData" id="${data.RolePermissionId}" value="${data.RolePermissionId}">
					<label for="${data.RolePermissionId}" class="custom-control-label"></label>
				</div>`;
					cell0.innerHTML = check;
					cell1.innerHTML = data.RolePermissionId;
					cell2.innerHTML = data.RoleId;
					cell3.innerHTML = data.Functions;
					cell4.innerHTML = data.FullAuthority;
					cell5.innerHTML = data.Addnew;
					cell6.innerHTML = data.Updates;
					cell7.innerHTML = data.ReadOnly;
					cell8.innerHTML = data.FullOfYourself;
					let strbutton = " <a  onclick=\"getById('" + data.RolePermissionId + "')\" type=\"button\" class=\"rounded-circle btn btn-sm btn-info\" title=\"Edit\">" +
						"<i class=\"fas fa-pencil-alt\"></i>" +
						"</a> " +
						" <button type=\"button\" class=\"rounded-circle btn btn-sm btn-danger\" data-id=\"" + data.RolePermissionId + "\" title=\"Delete\"  onclick=\"deleteById(this," + data.RolePermissionId + ")\">";
					strbutton += " <i class=\"fas fa-trash-alt\"></i> ";
					strbutton += " </ button > ";
					cell9.innerHTML = strbutton;
				}

				$('#btnUpdate').click(function () {
					$(this).prop('disabled', true);
					saveUpdate();
				});

				function saveUpdate() {
					let data = getDataForm();
					if (data == false) {
						$('#btnUpdate').prop('disabled', false);
						return false;
					}
					if (data.RolePermissionIdHidden == "") {
						$('#btnUpdate').prop('disabled', false);
						showNoticeDanger(language.Message_HaveNotSelectedItemUpdate);
						return false;
					}
					var link = $('#linkPrefix').val() + 'update';
					$.ajax({
						type: 'put',
						url: link,
						data: data,
						dataType: "json",
						success: function (response) {
							var success = response.success;
							var result = response.data;
							if ((success == 'false') || (success == false)) {
								showNoticeDanger(language.Message_UpdateError);
								return false;
							}
							else if ((success != true) && (success != 'true')) {
								showNoticeDanger(result.message);
								return false;
							}
							else {
								updateRow(result.data);
								clearForm();
							}
						},
						failure: function (response) {
							showErrorMessageSave(response, language.Message_UpdateError);
						},
						error: function (response) {
							showErrorMessageSave(response, language.Message_UpdateError);
						}
					});
					$('#btnUpdate').prop('disabled', false);
				}

				function updateRow(data) {
					showNoticeSuccess(language.Message_UpdateSuccess);
					var row = $("#tableSys_Role_Permission button[data-id='" + data.RolePermissionId + "']").parents("tr")[0];
					var tr = "<tr>" +
						"<td class=\"text-center\">" +
						"<div class=\"custom-control custom-checkbox\">" +
						"<input class=\"custom-control-input\" type=\"checkbox\" name=\"chkListData\" id=\"" + data.RolePermissionId + "\" value=\"" + data.RolePermissionId + "\"> " +
						"<label for=\"" + data.RolePermissionId + "\" class=\"custom-control-label\"></label> " +
						"</div>" +
						"</td>";
					tr += "<td class=\"text-center\">" + data.RolePermissionId + "</td>";
					tr += "<td class=\"text-center\">" + data.RoleId + "</td>";
					tr += "<td class=\"text-center\">" + data.Functions + "</td>";
					tr += "<td class=\"text-center\">" + data.FullAuthority + "</td>";
					tr += "<td class=\"text-center\">" + data.Addnew + "</td>";
					tr += "<td class=\"text-center\">" + data.Updates + "</td>";
					tr += "<td class=\"text-center\">" + data.ReadOnly + "</td>";
					tr += "<td class=\"text-center\">" + data.FullOfYourself + "</td>";
					tr += "<td class=\"text-center\">" +
						" <a  onclick=\"getById('" + data.RolePermissionId + "')\" type=\"button\" class=\"rounded-circle btn btn-sm btn-info\" title=\"Edit\">" +
						" <i class=\"fas fa-pencil-alt\"></i>" +
						" </a>" +
						" <button type=\"button\" class=\"rounded-circle btn btn-sm btn-danger\" data-id=\"" + data.RolePermissionId + "\" title=\"Delete\"  onclick=\"deleteById(this,'" + data.RolePermissionId + "')\">" +
						" <i class=\"fas fa-trash-alt\"></i> " +
						" </button> " +
						" </td>" +
						" </tr>";
					$(row).after(tr);
					$(row).remove();
				}
				function deleteById(row, IdObject) {
					let message = language.Message_DoYouWantToDeleteById + ' ' + IdObject + '?';
					var answer = confirm(message)
					if (!answer) { return false; }
					let data = {
						'RolePermissionId': IdObject
					};
					var link = $('#linkPrefix').val() + 'deleteById';
					$.ajax({
						type: 'delete',
						url: link,
						data: data,
						dataType: "json",
						success: function (resultdata) {
							var success = resultdata.success;
							var message = resultdata.message;
							var notice = {};
							if ((success == 'true') || (success == true)) {
								showNoticeSuccess(language.Message_DeleteSuccess);
								var i = row.parentNode.parentNode.rowIndex;
								document.getElementById("tableSys_Role_Permission").deleteRow(i);
								return true;
							}
							else if (message.length > 10) {
								showNoticeDanger(message);
								return false;
							}
							else {
								showNoticeDanger(language.Message_DeleteFail);
								return false;
							}
						},
						failure: function (response) {
							showNoticeDanger(language.Message_DeleteFail);
						},
						error: function (response) {
							showNoticeDanger(language.Message_DeleteFail);
						}
					});
				}

				$('#btnDelete').click(function () {
					$(this).prop('disabled', true);
					deleteList();
					$(this).prop('disabled', false);
				});
				function deleteList() {
					var arrayId = [];
					var listId = " ";
					$("input:checkbox[name=chkListData]:checked").each(function () {
						arrayId.push($(this).val());
						listId += $(this).val() + ' ';
					});
					let message = language.Message_DoYouWantToDeleteInTheList + ' ' + listId + '?';
					var answer = confirm(message)
					if (!answer) { return false; }
					let data = { arrayId };
					var link = $('#linkPrefix').val() + 'deleteList';
					$.ajax({
						type: 'delete',
						url: link,
						data: data,
						dataType: "json",
						success: function (resultdata) {
							var result = resultdata.result;
							var success = result.success;
							var message = result.message;
							if ((success == 'true') || (success == true)) {
								let deleteSuccess = result.deleteSuccess;
								let deleteError = result.deleteError;
								if (deleteSuccess.length > 0) {
									let message = language.Message_DeleteSuccess;
									message += " " + deleteSuccess.toString();
									if (deleteError.length > 0) {
										message += " \n" + language.Message_DeleteFail + " " + deleteError.toString();
									}
									showNoticeSuccess(message);
									deleteRows(arrayId, "tableSys_Role_Permission");
									return true;
								}
								else if (deleteError.length > 0) {
									let message = language.Message_DeleteFail + " " + deleteError.toString();
									showNoticeDanger(message);
								}
								else {
									showNoticeDanger(language.Message_DeleteFail);
								}
							}
							else if ((success == 'false') || (success == false)) {
								showNoticeDanger(language.Message_DeleteFail);
								return false;
							}
						},
						failure: function (response) {
							showNoticeDanger(language.Message_DeleteFail);
						},
						error: function (response) {
							showNoticeDanger(language.Message_DeleteFail);
						}
					});
				}

				$('#btnExport').click(function () {
					$(this).prop('disabled', true);
					exportData();
					$(this).prop('disabled', false);
				});

				function exportData() {
					let data = {
						'Functions': $('#Functions').val(),
					}
					var link = $('#linkPrefix').val() + 'exportData';
					$.ajax({
						type: 'post',
						url: link,
						data: data,
						dataType: "json",
						success: function (resultdata) {
							$('#btnExport').prop('disabled', false);
							let result = resultdata.result;
							showNoticeSuccess(language.Message_CompletedGetData);
							ExportToExcel(result);
						},
						failure: function (response) {
							$('#btnExport').prop('disabled', false);
							showNoticeDanger('Export Error');
						},
						error: function (response) {
							$('#btnExport').prop('disabled', false);
							showNoticeDanger('Export Error');
						}
					});
					$('#btnExport').prop('disabled', false);
				}

				function ExportToExcel(datas) {
					let itemCount = datas.length;
					if (itemCount > 1000) {
						showNoticeDanger(language.Message_WarningWhenExportingDataTooMuch);
					}
					if (itemCount < 1) {
						showNoticeDanger(language.Message_NotFoundData);
					}
					var strTable = '<style type="text/css">';
					strTable += ' .Border { ';
					strTable += '         color: windowtext; ';
					strTable += '         font-size: 11.0pt; ';
					strTable += '         word-break:break-all;';
					strTable += '         font-style: normal; ';
					strTable += '         text-decoration: none; ';
					strTable += '         font-family: "Times New Roman", serif; ';
					strTable += '         text-align: left; ';
					strTable += '         vertical-align: bottom;';
					strTable += '         border-left: .5pt solid windowtext; ';
					strTable += '         border-right: .5pt solid windowtext; ';
					strTable += '         border-top: .5pt solid windowtext; ';
					strTable += '         border-bottom: .5pt solid windowtext; ';
					strTable += '         padding-left: 1px; ';
					strTable += '         padding-right: 1px; ';
					strTable += '         padding-top: 1px; ';
					strTable += '     } ';

					strTable += ' .BorderHeader { ';
					strTable += '        color: white; ';
					strTable += '         background-color:#0026ff; ';
					strTable += '        font-size: 11.0pt; ';
					strTable += '        text-align: center; ';
					strTable += '        font-style: normal; ';
					strTable += '        text-decoration: none; ';
					strTable += '        font-family: "Times New Roman", serif; ';
					strTable += '        vertical-align: bottom;';
					strTable += '        border-left: .5pt solid windowtext; ';
					strTable += '        border-right: .5pt solid windowtext; ';
					strTable += '        border-top: .5pt solid windowtext; ';
					strTable += '        border-bottom: .5pt solid windowtext; ';
					strTable += '        padding-left: 1px; ';
					strTable += '        padding-right: 1px; ';
					strTable += '        padding-top: 1px; ';
					strTable += '     } ';
					strTable += '  </style> ';
					strTable += ' <table id="testTable"  border="1" frame="hsides" rules="groups" summary="Code page support in different versions of MS Windows."> ';
					strTable += '<tr class="BorderHeader" style="background - color:#0026ff; color:#fff"> ';
					strTable += '<th class="BorderHeader" >Order</th> ';
					strTable += '<th  class="BorderHeader" style="width: 100px; white - space:nowrap"> RolePermissionId </th> ';
					strTable += '<th  class="BorderHeader" style="width: 100px; white - space:nowrap"> RoleId </th> ';
					strTable += '<th  class="BorderHeader" style="width: 100px; white - space:nowrap"> Functions </th> ';
					strTable += '<th  class="BorderHeader" style="width: 100px; white - space:nowrap"> FullAuthority </th> ';
					strTable += '<th  class="BorderHeader" style="width: 100px; white - space:nowrap"> Addnew </th> ';
					strTable += '<th  class="BorderHeader" style="width: 100px; white - space:nowrap"> Updates </th> ';
					strTable += '<th  class="BorderHeader" style="width: 100px; white - space:nowrap"> ReadOnly </th> ';
					strTable += '<th  class="BorderHeader" style="width: 100px; white - space:nowrap"> FullOfYourself </th> ';
					strTable += '</tr> ';
					var n = 0;
					var currentRow = 4;
					for (var i = 0; i < itemCount; i++) {
						var vTemp = datas[i];
						currentRow += 1;
						n += 1;
						strTable += '<tr >';
						strTable += '<th class="Border" > ' + n + ' </th> ';
						strTable += '<th  class="Border" > ' + vTemp.RolePermissionId + ' </th> ';
						strTable += '<th  class="Border" > ' + vTemp.RoleId + ' </th> ';
						strTable += '<th  class="Border" > ' + vTemp.Functions + ' </th> ';
						strTable += '<th  class="Border" > ' + vTemp.FullAuthority + ' </th> ';
						strTable += '<th  class="Border" > ' + vTemp.Addnew + ' </th> ';
						strTable += '<th  class="Border" > ' + vTemp.Updates + ' </th> ';
						strTable += '<th  class="Border" > ' + vTemp.ReadOnly + ' </th> ';
						strTable += '<th  class="Border" > ' + vTemp.FullOfYourself + ' </th> ';
						strTable += '</tr>';
					}
					strTable += ' </table> ';
					ExportHtmlToExcel(strTable, 'Sys_Role_Permission');
					showNoticeSuccess(language.Message_ExportSuccess);
				}

			</script>