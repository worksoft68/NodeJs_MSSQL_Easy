<%- include ('./../helpers/pagination') %>
	<% const collection="sys_User_Role" ; const linkPrefix=systemConfig.prefixAdmin + `/${collection}/`; %>
		<%- include ('./../elements/notify') %>
			<div class="container-fluid">
				<input name="linkPrefix" id="linkPrefix" type="hidden" value="<%= linkPrefix %>">
				<input name="params" id="params" type="hidden" value="<%= params %>">
				<div class="card card-info card-outline">
					<div class="card-header">
						<h6 class="card-title">Form</h6>
						<div class="card-tools">
							<button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip"
								title="Collapse">
								<i class="fas fa-minus"></i>
							</button>
						</div>
					</div>
					<div class="card-body" style="display: block;">
						<form action=" <%= linkPrefix %>searchGet" method="GET">
							<div class="form-group row">
								<label id="labId" class="col-sm-2 col-form-label text-sm-right ">Id</label>
								<div class="col-xs-2 col-sm-2">
									<input type="number" readonly name="Id" id="Id" value="<%= item.Id %>"
										class="form-control form-control-sm">
								</div>
								<label id="labIdRole"
									class="col-sm-2 col-form-label text-sm-right required">Role</label>
								<div class="col-xs-2 col-sm-2">
									<div class="dropdown">
										<div id="divDropdownName" class="dropdown-content">
											<input type="text" id="Name" name="Name" onkeyup="filterSelectBox('Name')"
												onfocus="focusDropdown('Name')" onblur="blurDropdown('Name')"
												class="form-control form-control-sm">
											<input id="IdRole" name="IdRole" type="hidden">
											<div id="DivContenName" class="Divdropdown-content">
											</div>
										</div>
									</div>
								</div>
								<label id="labUsersId"
									class="col-sm-2 col-form-label text-sm-right required">User</label>
								<div class="col-xs-2 col-sm-2">
									<div class="dropdown">
										<div id="divDropdownLastName" class="dropdown-content">
											<input type="text" id="LastName" name="LastName"
												onkeyup="filterSelectBox('LastName')"
												onfocus="focusDropdown('LastName')" onblur="blurDropdown('LastName')"
												class="form-control form-control-sm">
											<input id="UsersId" name="UsersId" type="hidden">
											<div id="DivContenLastName" class="Divdropdown-content">
											</div>
										</div>
									</div>
								</div>
							</div>
							<div class="form-group row">
								<div class="col-xs-2 col-sm-2"></div>
								<div class="col-xs-10 col-sm-10">

									<button type="button" id="btnSave" class="btn btn-sm btn-success" title="Save">
										<i class="fa fa-save"></i> Save
									</button>

									<button type="button" id="btnSaveAs" class="btn-sm btn-danger" title="Save as">
										<i class="far fa-clone"></i> Save as
									</button>

									&nbsp; <button type="button" id="btnUpdate" class="btn-sm btn-primary"
										title="Update">
										<i class="fa fa-save"></i> Update
									</button>

									&nbsp; <button type="button" id="btnDelete" class="btn btn-sm btn-danger"
										title="Delete">
										<i class="fas fa-trash-alt"></i> Delete
									</button>

									&nbsp; <button type="button" id="btnSearchPost" class="btn btn-sm btn-primary"
										title="Search">
										<i class="fa fa-search"></i> Search
									</button>

									&nbsp; <button type="button" id="btnSearchGet" class="btn-sm btn-warning"
										title="Search Get">
										<i class="fa fa-search"></i> Search Get
									</button>
									&nbsp; <button type="button" id="btnExport" class="btn btn-sm btn-success"
										title="Export">
										<i class="fa fa-download"></i> Export
									</button>


									<!-- <input type="button" id = "btnSave" class="btn-sm btn-success" value="Save">
						 &nbsp; <input type="button" id = "btnSaveAs" class="btn-sm btn-danger" value="Save as">
						&nbsp; <input type="button" id = "btnUpdate" class="btn-sm btn-primary" value="Update">
						&nbsp; <input type="button" id = "btnDelete" class="btn-sm btn-danger" value="Delete">
						&nbsp; <input type="button" id = "btnSearchPost" class="btn-sm btn-info" value="Search">
						&nbsp; <input type="submit" id = "btnSearchGet" class="btn-sm btn-warning" value="Search Get">
						&nbsp; <input type="button" id = "btnExport" class="btn-sm btn-success" value="Export"> -->
								</div>
							</div>
							<div class="form-group row">
								<div class="text-success" id="divMessage"></div>
							</div>
						</form>
						<input name="IdHidden" id="IdHidden" type="hidden">
						<input name="listData" id="listData" type="hidden" value="<%= itemString %>">
						<input name="sysLanguage" id="sysLanguage" type="hidden" value="<%= language %>">
						<input name="listdataCatalogue" id="listdataCatalogue" type="hidden" value="<%= catalogue %>">
					</div>
				</div>
				<div class="card card-info card-outline">
					<div class="card-header">
						<h4 class="card-title">List data</h4>
						<div class="card-tools">
							<button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip"
								title="Collapse"><i class="fas fa-minus"></i></button>
						</div>
					</div>
					<div class="card-body">
						<table id="tableSys_User_Role" class="table table-bordered table-hover btn-table mb-0">
							<thead>
								<tr>
									<th class="text-center">
										<div class="custom-control custom-checkbox">
											<input class="custom-control-input cbAll" type="checkbox" id="check-all">
											<label for="check-all" class="custom-control-label"></label>
										</div>
									</th>
									<th class="text-center"><label id="labId_tb">Id</label></a></th>
									<th class="text-center"><label id="labIdRole_tb">Role</label></a></th>
									<th class="text-center"><label id="labUsersId_tb">User</label></a></th>
									<th class="text-center">Action</a></th>
								</tr>
							</thead>
							<tbody>
								<tr>
									<th class="text-center"></a></th>
									<th class="text-center"></a></th>
									<th class="text-center"></a></th>
									<th class="text-center"></a></th>
								</tr>
							</tbody>
						</table>
					</div>
				</div>
				<div class="card-footer clearfix" id="paginationSys_User_Role">
				</div>
			</div>
			<script type="application/javascript">
				var language = {};

				onLoadData();
				function onLoadData() {
					getLanguage();
					setUpdateButtonStatus(false)
					setInterfaceText();
					var strData = $('#listData').val();
					const arrData = JSON.parse(strData);
					if (arrData.length > 0) {
						displayDataToTable(arrData);
						var paramsString = $('#params').val();
						const params = JSON.parse(paramsString);
						var linkPrefix = $('#linkPrefix').val();
						paginationHelper(params.pagination, "Sys_User_Role", params.currentStatus, params.keyword, linkPrefix, "paginationSys_User_Role");
					}
				}

				function displayDataToTable(datas) {
					var table = document.getElementById("tableSys_User_Role");
					var lengthtable = table.rows.length - 1;
					for (var n = lengthtable; n > 0; n--) {
						table.deleteRow(n);
					}
					var length = datas.length;
					if (length < 1) {
						showNoticeDanger(language.Message_NotFoundData);
						return false;
					}
					datas.forEach(function (data) {
						var row = table.insertRow(1);
						var cell0 = row.insertCell(0);
						var cell1 = row.insertCell(1);
						var cell2 = row.insertCell(2);
						var cell3 = row.insertCell(3);
						var cell4 = row.insertCell(4);
						let check = `<div class="custom-control custom-checkbox"> 
				<input class="custom-control-input" type="checkbox" name="chkListData" id="${data.Id}" value="${data.Id}">
				<label for="${data.Id}" class="custom-control-label"></label>
			</div>`;
						cell0.innerHTML = check;
						cell1.innerHTML = data.Id;
						cell2.innerHTML = data.Name;
						cell3.innerHTML = data.LastName;
						let strbutton = " <a  onclick=\"getById('" + data.Id + "')\" type=\"button\" class=\"rounded-circle btn btn-sm btn-info\" title=\"Edit\">" +
							"<i class=\"fas fa-pencil-alt\"></i>" +
							"</a> " +
							" <button type=\"button\" class=\"rounded-circle btn btn-sm btn-danger\" data-id=\"" + data.Id + "\" title=\"Delete\"  onclick=\"deleteById(this," + data.Id + ")\">";
						strbutton += " <i class=\"fas fa-trash-alt\"></i> ";
						strbutton += " </ button > ";
						cell4.innerHTML = strbutton;
					});
				}
				function setUpdateButtonStatus(statusUpdate) {
					$('#btnSave').prop('hidden', statusUpdate);
					$('#btnUpdate').prop('hidden', !statusUpdate);
				}

				function getLanguage() {
					var languageString = $('#sysLanguage').val();
					language = JSON.parse(languageString);
				}

				function setInterfaceText() {
					$("#pageTitle").html(language.TitlePage);
					$("#labId").text(language.Id);
					$("#labIdRole").text(language.IdRole);
					$("#labUsersId").text(language.UsersId);
					$("#labId_tb").text(language.Id);
					$("#labIdRole_tb").text(language.IdRole);
					$("#labUsersId_tb").text(language.UsersId);
				}

				createDataForDropdownLists();
				function createDataForDropdownLists() {
					var strCatalogue = $('#listdataCatalogue').val();
					arrCatalogue = JSON.parse(strCatalogue);
					createDataForDropdown(arrCatalogue[0], 'IdRole', 'Id', 'Name', 'Name', '-- Chose --');
					createDataForDropdown(arrCatalogue[1], 'UsersId', 'UsersId', 'LastName', 'LastName', '-- Chose --');
				}

				closeAllDropdown();
				function closeAllDropdown() {
					var DivContenName = document.getElementById('DivContenName');
					DivContenName.hidden = true;

					var DivContenLastName = document.getElementById('DivContenLastName');
					DivContenLastName.hidden = true;

				}

				function getById(Id) {
					var link = $('#linkPrefix').val() + 'getById/' + Id;
					$.ajax({
						type: 'GET',
						url: link,
						dataType: "json",
						success: function (resultdata) {
							var success = resultdata.success;
							if (success == true) {
								showDataToForm(resultdata.data);
							}
						},
						failure: function (response) {
							alert(language.Message_GetItemByIdError);
						},
						error: function (response) {
							alert(language.Message_GetItemByIdError);
						},
					});
				}

				function showDataToForm(data) {
					try {
						setUpdateButtonStatus(true);
						$('#IdHidden').val(data.Id);
						$('#Id').val(data.Id);
						$('#IdRole').val(data.IdRole);
						$('#Name').val(data.Name);
						$('#UsersId').val(data.UsersId);
						$('#LastName').val(data.LastName);
					}
					catch (error) { }
				}

				function clearForm() {
					try {
						$('#IdHidden').val('');
						setUpdateButtonStatus(false)
						$('#Id').val('');
						$('#IdRole').val('');
						$('#Name').val('');
						$('#UsersId').val('');
						$('#LastName').val('');
					}
					catch (error) { }
				}

				$('#btnSearchPost').click(function () {
					$(this).prop('disabled', true);
					getContentPages(1);
				});

				function getContentPages(page) {
					let data = {
						'Page': page,
					}
					var link = $('#linkPrefix').val() + 'search';
					$.ajax({
						type: 'POST',
						url: link,
						data: data,
						dataType: "json",
						success: function (resultdata) {
							$('#btnSearchPost').prop('disabled', false);
							let result = resultdata.result;
							displayDataToTable(result);
							var linkPrefix = $('#linkPrefix').val();
							let params = resultdata.params;
							paginationHelper(params.pagination, "Sys_User_Role", "", "", linkPrefix, "paginationSys_User_Role");

							if (params.pagination.totalItems > 0) {
								var message = language.Message_Find + params.pagination.totalItems + language.Message_Words_records;
								showNoticeSuccess(message);
							}
						},
						failure: function (response) {
							$('#btnSearchPost').prop('disabled', false);
							showNoticeDanger('Search Error');
						},
						error: function (response) {
							$('#btnSearchPost').prop('disabled', false);
							showNoticeDanger('Search Error');
						}
					});
					$('#btnSearchPost').prop('disabled', false);
				}

				$('#btnSave').click(function () {
					$(this).prop('disabled', true);
					saveInsert();
				});

				$('#btnSaveAs').click(function () {
					$(this).prop('disabled', true);
					$('#IdHidden').val('');
					$('#Id').val('');
					saveInsert();
				});

				function getDataForm() {
					if (($('#IdRole').val() < 0) || ($('#IdRole').val() > 2147483647)) {
						var message = formatMessage(language.IdRole + ": " + language.Message_Invalid_IdRole, '0', '2147483647');
						alert(message);
						return false;
					}
					if (($('#UsersId').val() < 0) || ($('#UsersId').val() > 2147483647)) {
						var message = formatMessage(language.UsersId + ": " + language.Message_Invalid_UsersId, '0', '2147483647');
						alert(message);
						return false;
					}
					return {
						'IdHidden': $('#IdHidden').val(),
						'Id': $('#Id').val(),
						'IdRole': $('#IdRole').val(),
						'UsersId': $('#UsersId').val(),
					}
				}

				function saveInsert() {
					let data = getDataForm();
					if (data == false) {
						$('#btnSave').prop('disabled', false);
						return false;
					}
					var link = $('#linkPrefix').val() + 'save';
					$.ajax({
						type: 'post',
						url: link,
						data: data,
						dataType: "json",
						success: function (response) {
							var success = response.success;
							var result = response.data;
							if ((success == 'false') || (success == false))
								showNoticeDanger(language.Message_AddNewError);
							else if ((success != true) && (success != 'true'))
								showNoticeDanger(result.message);
							else {
								insertRow(result.data);
								clearForm();
							}
						},
						failure: function (response) {
							showErrorMessageSave(response, language.Message_AddNewError);
						},
						error: function (response) {
							showErrorMessageSave(response, language.Message_AddNewError);
						},
					});
					$('#btnSave').prop('disabled', false);
				}

				function insertRow(data) {
					showNoticeSuccess(language.Message_AddNewSuccess);
					var table = document.getElementById("tableSys_User_Role");
					var row = table.insertRow(1);
					var cell0 = row.insertCell(0);
					var cell1 = row.insertCell(1);
					var cell2 = row.insertCell(2);
					var cell3 = row.insertCell(3);
					var cell4 = row.insertCell(4);
					let check = `<div class="custom-control custom-checkbox"> 
					<input class="custom-control-input" type="checkbox" name="chkListData" id="${data.Id}" value="${data.Id}">
					<label for="${data.Id}" class="custom-control-label"></label>
				</div>`;
					cell0.innerHTML = check;
					cell1.innerHTML = data.Id;
					if (data.IdRole == $('#IdRole').val()) {
						cell2.innerHTML = $('#Name').val();
					}
					if (data.UsersId == $('#UsersId').val()) {
						cell3.innerHTML = $('#LastName').val();
					}
					let strbutton = " <a  onclick=\"getById('" + data.Id + "')\" type=\"button\" class=\"rounded-circle btn btn-sm btn-info\" title=\"Edit\">" +
						"<i class=\"fas fa-pencil-alt\"></i>" +
						"</a> " +
						" <button type=\"button\" class=\"rounded-circle btn btn-sm btn-danger\" data-id=\"" + data.Id + "\" title=\"Delete\"  onclick=\"deleteById(this," + data.Id + ")\">";
					strbutton += " <i class=\"fas fa-trash-alt\"></i> ";
					strbutton += " </ button > ";
					cell4.innerHTML = strbutton;
				}

				$('#btnUpdate').click(function () {
					$(this).prop('disabled', true);
					saveUpdate();
				});

				function saveUpdate() {
					let data = getDataForm();
					if (data == false) {
						$('#btnUpdate').prop('disabled', false);
						return false;
					}
					if (data.IdHidden == "") {
						$('#btnUpdate').prop('disabled', false);
						showNoticeDanger(language.Message_HaveNotSelectedItemUpdate);
						return false;
					}
					var link = $('#linkPrefix').val() + 'update';
					$.ajax({
						type: 'put',
						url: link,
						data: data,
						dataType: "json",
						success: function (response) {
							var success = response.success;
							var result = response.data;
							if ((success == 'false') || (success == false)) {
								showNoticeDanger(language.Message_UpdateError);
								return false;
							}
							else if ((success != true) && (success != 'true')) {
								showNoticeDanger(result.message);
								return false;
							}
							else {
								updateRow(result.data);
								clearForm();
							}
						},
						failure: function (response) {
							showErrorMessageSave(response, language.Message_UpdateError);
						},
						error: function (response) {
							showErrorMessageSave(response, language.Message_UpdateError);
						}
					});
					$('#btnUpdate').prop('disabled', false);
				}

				function updateRow(data) {
					showNoticeSuccess(language.Message_UpdateSuccess);
					var row = $("#tableSys_User_Role button[data-id='" + data.Id + "']").parents("tr")[0];
					var tr = "<tr>" +
						"<td class=\"text-center\">" +
						"<div class=\"custom-control custom-checkbox\">" +
						"<input class=\"custom-control-input\" type=\"checkbox\" name=\"chkListData\" id=\"" + data.Id + "\" value=\"" + data.Id + "\"> " +
						"<label for=\"" + data.Id + "\" class=\"custom-control-label\"></label> " +
						"</div>" +
						"</td>";
					tr += "<td class=\"text-center\">" + data.Id + "</td>";
					if (data.IdRole == $('#IdRole').val()) {
						tr += "<td class=\"text-center\">" + $('#Name').val() + "</td>";
					}
					if (data.UsersId == $('#UsersId').val()) {
						tr += "<td class=\"text-center\">" + $('#LastName').val() + "</td>";
					}
					tr += "<td class=\"text-center\">" +
						" <a  onclick=\"getById('" + data.Id + "')\" type=\"button\" class=\"rounded-circle btn btn-sm btn-info\" title=\"Edit\">" +
						" <i class=\"fas fa-pencil-alt\"></i>" +
						" </a>" +
						" <button type=\"button\" class=\"rounded-circle btn btn-sm btn-danger\" data-id=\"" + data.Id + "\" title=\"Delete\"  onclick=\"deleteById(this,'" + data.Id + "')\">" +
						" <i class=\"fas fa-trash-alt\"></i> " +
						" </button> " +
						" </td>" +
						" </tr>";
					$(row).after(tr);
					$(row).remove();
				}
				function deleteById(row, IdObject) {
					let message = language.Message_DoYouWantToDeleteById + ' ' + IdObject + '?';
					var answer = confirm(message)
					if (!answer) { return false; }
					let data = {
						'Id': IdObject
					};
					var link = $('#linkPrefix').val() + 'deleteById';
					$.ajax({
						type: 'delete',
						url: link,
						data: data,
						dataType: "json",
						success: function (resultdata) {
							var success = resultdata.success;
							var message = resultdata.message;
							var notice = {};
							if ((success == 'true') || (success == true)) {
								showNoticeSuccess(language.Message_DeleteSuccess);
								var i = row.parentNode.parentNode.rowIndex;
								document.getElementById("tableSys_User_Role").deleteRow(i);
								return true;
							}
							else if (message.length > 10) {
								showNoticeDanger(message);
								return false;
							}
							else {
								showNoticeDanger(language.Message_DeleteFail);
								return false;
							}
						},
						failure: function (response) {
							showNoticeDanger(language.Message_DeleteFail);
						},
						error: function (response) {
							showNoticeDanger(language.Message_DeleteFail);
						}
					});
				}

				$('#btnDelete').click(function () {
					$(this).prop('disabled', true);
					deleteList();
					$(this).prop('disabled', false);
				});
				function deleteList() {
					var arrayId = [];
					var listId = " ";
					$("input:checkbox[name=chkListData]:checked").each(function () {
						arrayId.push($(this).val());
						listId += $(this).val() + ' ';
					});
					let message = language.Message_DoYouWantToDeleteInTheList + ' ' + listId + '?';
					var answer = confirm(message)
					if (!answer) { return false; }
					let data = { arrayId };
					var link = $('#linkPrefix').val() + 'deleteList';
					$.ajax({
						type: 'delete',
						url: link,
						data: data,
						dataType: "json",
						success: function (resultdata) {
							var result = resultdata.result;
							var success = result.success;
							var message = result.message;
							if ((success == 'true') || (success == true)) {
								let deleteSuccess = result.deleteSuccess;
								let deleteError = result.deleteError;
								if (deleteSuccess.length > 0) {
									let message = language.Message_DeleteSuccess;
									message += " " + deleteSuccess.toString();
									if (deleteError.length > 0) {
										message += " \n" + language.Message_DeleteFail + " " + deleteError.toString();
									}
									showNoticeSuccess(message);
									deleteRows(arrayId, "tableSys_User_Role");
									return true;
								}
								else if (deleteError.length > 0) {
									let message = language.Message_DeleteFail + " " + deleteError.toString();
									showNoticeDanger(message);
								}
								else {
									showNoticeDanger(language.Message_DeleteFail);
								}
							}
							else if ((success == 'false') || (success == false)) {
								showNoticeDanger(language.Message_DeleteFail);
								return false;
							}
						},
						failure: function (response) {
							showNoticeDanger(language.Message_DeleteFail);
						},
						error: function (response) {
							showNoticeDanger(language.Message_DeleteFail);
						}
					});
				}

				$('#btnExport').click(function () {
					$(this).prop('disabled', true);
					exportData();
					$(this).prop('disabled', false);
				});

				function exportData() {
					let data = {
					}
					var link = $('#linkPrefix').val() + 'exportData';
					$.ajax({
						type: 'post',
						url: link,
						data: data,
						dataType: "json",
						success: function (resultdata) {
							$('#btnExport').prop('disabled', false);
							let result = resultdata.result;
							showNoticeSuccess(language.Message_CompletedGetData);
							ExportToExcel(result);
						},
						failure: function (response) {
							$('#btnExport').prop('disabled', false);
							showNoticeDanger('Export Error');
						},
						error: function (response) {
							$('#btnExport').prop('disabled', false);
							showNoticeDanger('Export Error');
						}
					});
					$('#btnExport').prop('disabled', false);
				}

				function ExportToExcel(datas) {
					let itemCount = datas.length;
					if (itemCount > 1000) {
						showNoticeDanger(language.Message_WarningWhenExportingDataTooMuch);
					}
					if (itemCount < 1) {
						showNoticeDanger(language.Message_NotFoundData);
					}
					var strTable = '<style type="text/css">';
					strTable += ' .Border { ';
					strTable += '         color: windowtext; ';
					strTable += '         font-size: 11.0pt; ';
					strTable += '         word-break:break-all;';
					strTable += '         font-style: normal; ';
					strTable += '         text-decoration: none; ';
					strTable += '         font-family: "Times New Roman", serif; ';
					strTable += '         text-align: left; ';
					strTable += '         vertical-align: bottom;';
					strTable += '         border-left: .5pt solid windowtext; ';
					strTable += '         border-right: .5pt solid windowtext; ';
					strTable += '         border-top: .5pt solid windowtext; ';
					strTable += '         border-bottom: .5pt solid windowtext; ';
					strTable += '         padding-left: 1px; ';
					strTable += '         padding-right: 1px; ';
					strTable += '         padding-top: 1px; ';
					strTable += '     } ';

					strTable += ' .BorderHeader { ';
					strTable += '        color: white; ';
					strTable += '         background-color:#0026ff; ';
					strTable += '        font-size: 11.0pt; ';
					strTable += '        text-align: center; ';
					strTable += '        font-style: normal; ';
					strTable += '        text-decoration: none; ';
					strTable += '        font-family: "Times New Roman", serif; ';
					strTable += '        vertical-align: bottom;';
					strTable += '        border-left: .5pt solid windowtext; ';
					strTable += '        border-right: .5pt solid windowtext; ';
					strTable += '        border-top: .5pt solid windowtext; ';
					strTable += '        border-bottom: .5pt solid windowtext; ';
					strTable += '        padding-left: 1px; ';
					strTable += '        padding-right: 1px; ';
					strTable += '        padding-top: 1px; ';
					strTable += '     } ';
					strTable += '  </style> ';
					strTable += ' <table id="testTable"  border="1" frame="hsides" rules="groups" summary="Code page support in different versions of MS Windows."> ';
					strTable += '<tr class="BorderHeader" style="background - color:#0026ff; color:#fff"> ';
					strTable += '<th class="BorderHeader" >Order</th> ';
					strTable += '<th  class="BorderHeader" style="width: 100px; white - space:nowrap"> Id </th> ';
					strTable += '<th  class="BorderHeader" style="width: 100px; white - space:nowrap"> Role </th> ';
					strTable += '<th  class="BorderHeader" style="width: 100px; white - space:nowrap"> User </th> ';
					strTable += '</tr> ';
					var n = 0;
					var currentRow = 4;
					for (var i = 0; i < itemCount; i++) {
						var vTemp = datas[i];
						currentRow += 1;
						n += 1;
						strTable += '<tr >';
						strTable += '<th class="Border" > ' + n + ' </th> ';
						strTable += '<th  class="Border" > ' + vTemp.Id + ' </th> ';
						strTable += '<th  class="Border" > ' + vTemp.IdRole + ' </th> ';
						strTable += '<th  class="Border" > ' + vTemp.UsersId + ' </th> ';
						strTable += '</tr>';
					}
					strTable += ' </table> ';
					ExportHtmlToExcel(strTable, 'Sys_User_Role');
					showNoticeSuccess(language.Message_ExportSuccess);
				}

			</script>